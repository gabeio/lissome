server {
    listen 80;
    listen 443;
    access_log /var/log/nginx/lissome_access.log;
    error_log /var/log/nginx/lissome_error.log;
    server_name lissome.co;
    root /www/lissome;
}

server {
    listen 80;
    listen 443;
    sendfile on;
    tcp_nodelay on;
    server_tokens off;
    server_name assets.lissome.co;
    root /opt/lissome/public/assets;
    add_header Access-Control-Allow-Origin "*";
    gzip_static on; # to serve pre-gzipped version
    expires max;
    add_header Cache-Control private;
}

upstream demo.lissome.login {
    server localhost:4860;
} upstream demo.lissome.dash {
    server localhost:4861;
} upstream demo.lissome.course {
    server localhost:4862;
} upstream demo.lissome.assign {
    server localhost:4863;
} upstream demo.lissome.conf {
    server localhost:4864;
} upstream demo.lissome.blog {
    server localhost:4865;
} server {
    # FORCE HTTPS W/O CLOUDFLARE [PART 1 of 2]
    # comment out the line below if you wish to force https and are not
    # running nginx behind a service like cloudflare [PART 1]
    listen 80;
    listen 443;
    server_name demo.lissome.co; # change this
    access_log  /var/log/nginx/demo_lissome_access.log;
    error_log  /var/log/nginx/demo_lissome_error.log;
    log_format combined '$remote_addr - $remote_user [$time_local] '
        '"$request" $status $body_bytes_sent '
        '"$http_referer" "$http_user_agent"';
    proxy_buffering off;
    sendfile on;
    tcp_nodelay on;
    server_tokens off;
    root /home/gabeio/lissome/public;
    add_header Access-Control-Allow-Origin "assets.lissome.co";
    # FORCE HTTPS W/ CLOUDFLARE
    # uncomment the if statements below if you which to force https
    # and if you are are running behind another reverse proxy
    # this includes services like cloudflare
    # if ($http_x_forwarded_proto = "http"){
    #     return 301 https://$server_name$request_uri permanent;
    # }
    # if ($http_forwarded_proto = "http"){
    #     return 301 https://$server_name$request_uri permanent;
    # }
    # all routes directed to lissome app but seperated by area
    # (untested performance difference)
    location ~* ^/dashboard {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://demo.lissome.dash;
        proxy_redirect off; # proxy_buffering off;
    }
    location ~* ^/logout {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://demo.lissome.login;
        proxy_redirect off;
    }
    location ~* ^/login {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://demo.lissome.login;
        proxy_redirect off;
    }
    location ~* /assignments {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://demo.lissome.assign;
        proxy_redirect off;
    }
    location ~* /blog {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://demo.lissome.blog;
        proxy_redirect off;
    }
    location ~* /conference {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://demo.lissome.conf;
        proxy_redirect off;
    }
    location = / {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://demo.lissome.dash;
        proxy_redirect off;
    }
    location / {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://demo.lissome.course;
        proxy_redirect off;
    }
    # static html
    error_pate 400 /static/400.html;
    error_page 404 /static/404.html;
    error_page 500 /static/500.html;
}

# FORCE HTTPS W/O CLOUDFLARE [PART 2 of 2]
# uncomment the lines below if you wish to force https and are not
# running nginx behind a service like cloudflare [PART 2]
# server {
#     listen 80;
#     server demo.lissome.co;
#     return 301 https://$server_name$request_uri permanent;
# }
